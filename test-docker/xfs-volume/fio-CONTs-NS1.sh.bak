#!/bin/bash
TARGET_DEV="nvme1n1"
DEVICE="/dev/"$TARGET_DEV
MOUNT="/mnt/"$TARGET_DEV
IODEPTH=1
BS=4k
MIN_NUM_CONT=0  # 2^0 = 1
MAX_NUM_CONT=0  # 2^10 = 1024
RUNTIME=15
RAMPTIME=0
LOG_MSEC=10
SRC_VOLUME=resource
SRC_PATH="/mnt/"$SRC_VOLUME
IMAGE=test
LOG_PATH=$SRC_PATH/time-sync/fio-CONTs-NS1

func_mix()
{
    ARR_READ_APP_RATIO=(10 20 30 40 50 60 70 80 90)
    for READ_RATIO in "${ARR_READ_APP_RATIO[@]}"
    do
        if [ "$1" = "diff" ]
        then
            MAX_NUM_CONT=8
        fi

        for numcont in $(seq $MIN_NUM_CONT $MAX_NUM_CONT)
        do
            NUM_CONT=$((2**$numcont))
            NUM_READ=$(($NUM_CONT/$READ_RATIO))
            NUM_WRITE=$(($NUM_CONT-$NUM_READ))

            for CONT_ID in $(seq 1 $NUM_READ)
            do
                if [ "$1" = "same" ]
                then
                    FILE_NAME=text1
                    NEW_LOG_PATH=${LOG_PATH}-diffAPP-sameFile-QD${IODEPTH}
                else
                    FILE_NAME=text${CONT_ID}
                    NEW_LOG_PATH=${LOG_PATH}-diffAPP-diffFile-QD${IODEPTH}
                fi

                mkdir -p $NEW_LOG_PATH
                FIO_LOG_FILE=$NEW_LOG_PATH/READ_RATIO${READ_RATIO}_CONC${NUM_CONT}_CONT${CONT_ID}.summary
                TS_LOG_FILE=$NEW_LOG_PATH/READ_RATIO${READ_RATIO}_CONC${NUM_CONT}_CONT${CONT_ID}

                docker run -d \
                    --mount source=$TARGET_DEV,target=$MOUNT \
                    --mount source=$SRC_VOLUME,target=$SRC_PATH \
                    $IMAGE --name test --direct=1 --ioengine=libaio --iodepth=$IODEPTH --filename=$MOUNT/$FILE_NAME --rw=randread --bs=$BS --time_based --runtime=$RUNTIME --ramp_time=$RAMPTIME \
                    --log_avg_msec=$LOG_MSEC --write_lat_log=$TS_LOG_FILE --write_bw_log=$TS_LOG_FILE --write_iops_log=$TS_LOG_FILE --output=$FIO_LOG_FILE
            done

            NUM_START=$(($NUM_READ+1))
            for CONT_ID in $(seq $NUM_START $NUM_CONT)
            do
                if [ "$1" = "same" ]
                then
                    FILE_NAME=text1
                    NEW_LOG_PATH=${LOG_PATH}-diffAPP-sameFile-QD${IODEPTH}
                else
                    FILE_NAME=text${CONT_ID}
                    NEW_LOG_PATH=${LOG_PATH}-diffAPP-diffFile-QD${IODEPTH}
                fi

                mkdir -p $NEW_LOG_PATH
                FIO_LOG_FILE=$NEW_LOG_PATH/READ_RATIO${READ_RATIO}_CONC${NUM_CONT}_CONT${CONT_ID}.summary
                TS_LOG_FILE=$NEW_LOG_PATH/READ_RATIO${READ_RATIO}_CONC${NUM_CONT}_CONT${CONT_ID}

                docker run -d \
                    --mount source=$TARGET_DEV,target=$MOUNT \
                    --mount source=$SRC_VOLUME,target=$SRC_PATH \
                    $IMAGE --name test --direct=1 --ioengine=libaio --iodepth=$IODEPTH --filename=$MOUNT/$FILE_NAME --rw=randwrite --bs=$BS --time_based --runtime=$RUNTIME --ramp_time=$RAMPTIME \
                    --log_avg_msec=$LOG_MSEC --write_lat_log=$TS_LOG_FILE --write_bw_log=$TS_LOG_FILE --write_iops_log=$TS_LOG_FILE --output=$FIO_LOG_FILE

            done
            docker wait $(docker ps -aq)
        done
    done
}

func_same_simple()
{
#    ARR_JOB=(randread read randwrite write)
    ARR_JOB=(randread)
    for JOB_TYPE in "${ARR_JOB[@]}"
    do
        if [ "$1" = "diff" ]
        then
            MAX_NUM_CONT=8
        fi

        for numcont in $(seq $MIN_NUM_CONT $MAX_NUM_CONT)
        do
            DATE=$(date --date="2 minutes" +%H:%M)
            echo $DATE
            NUM_CONT=$((2**$numcont))
            for CONT_ID in $(seq 1 $NUM_CONT)
            do
                if [ "$1" = "same" ]
                then
                    FILE_NAME=text1
                    NEW_LOG_PATH=${LOG_PATH}-sameAPP-sameFile-QD${IODEPTH}
                else
                    FILE_NAME=text${CONT_ID}
                    NEW_LOG_PATH=${LOG_PATH}-sameAPP-diffFile-QD${IODEPTH}
                fi

                mkdir -p $NEW_LOG_PATH
                FIO_LOG_FILE=$NEW_LOG_PATH/${JOB_TYPE}_CONC${NUM_CONT}_CONT${CONT_ID}.summary
                TS_LOG_FILE=$NEW_LOG_PATH/${JOB_TYPE}_CONC${NUM_CONT}_CONT${CONT_ID}

                {
                    echo fio --name test --direct=1 --ioengine=libaio --iodepth=$IODEPTH \
                        --filename=$MOUNT/$FILE_NAME --rw=$JOB_TYPE --bs=$BS \
                        --time_based --runtime=$RUNTIME --ramp_time=$RAMPTIME \
                        --log_avg_msec=$LOG_MSEC --write_lat_log=$TS_LOG_FILE \
                        --write_bw_log=$TS_LOG_FILE --write_iops_log=$TS_LOG_FILE \
                        --output=$FIO_LOG_FILE
                } >/mnt/resource/fiofiles/fio.sh

                docker run -d \
                    --mount type=bind,source=/etc/localtime,target=/etc/localtime \
                    --mount source=$TARGET_DEV,target=$MOUNT \
                    --mount source=$SRC_VOLUME,target=$SRC_PATH \
                    $IMAGE $DATE -f /mnt/resource/fiofiles/fio.sh

                docker ps -a
            done
            docker wait $(docker ps -aq)
        done
    done
}

func_same_mix()
{
    ARR_JOB=(readwrite randrw)
    ARR_READ_RATIO=(10 20 30 40 50 60 70 80 90)
    FILE_NAME=text1

    for JOB_TYPE in "${ARR_JOB[@]}"
    do
        if [ "$1" = "diff"  ]
        then
            MAX_NUM_CONT=8
        fi

        for numcont in $(seq $MIN_NUM_CONT $MAX_NUM_CONT)
        do
            NUM_CONT=$((2**$numcont))
            for CONT_ID in $(seq 1 $NUM_CONT)
            do
                if [ "$1" = "same"  ]
                then
                    FILE_NAME=text1
                    NEW_LOG_PATH=${LOG_PATH}-sameAPP-sameFile-QD${IODEPTH}
                else
                    FILE_NAME=text${CONT_ID}
                    NEW_LOG_PATH=${LOG_PATH}-sameAPP-diffFile-QD${IODEPTH}
                fi
                mkdir -p $NEW_LOG_PATH
                FIO_LOG_FILE=$NEW_LOG_PATH/${JOB_TYPE}_CONC${NUM_CONT}_CONT${CONT_ID}.summary
                TS_LOG_FILE=$NEW_LOG_PATH/${JOB_TYPE}_CONC${NUM_CONT}_CONT${CONT_ID}

                docker run -d --rm \
                    --mount source=$TARGET_DEV,target=$MOUNT \
                    --mount source=$SRC_VOLUME,target=$SRC_PATH \
                    $IMAGE --name test --direct=1 --ioengine=libaio --iodepth=$IODEPTH --filename=$MOUNT/text1 --rw=$JOB_TYPE --bs=$BS --time_based --runtime=$RUNTIME --ramp_time=$RAMPTIME \
                    --rwmixread=$READ_RATIO --log_avg_msec=$LOG_MSEC --write_lat_log=$TS_LOG_FILE --write_bw_log=$TS_LOG_FILE --write_iops_log=$TS_LOG_FILE --output=$FIO_LOG_FILE
            done
            docker wait $(docker ps -aq)
        done
    done
}

if [[ $(docker ps -aq) ]]
then
    docker kill $(docker ps -aq)
    docker rm $(docker ps -aq)
fi

func_same_simple "same"
#func_same_simple "diff"

#func_same_mix "same"
#func_same_mix "diff"
#func_mix "same"
#func_mix "diff"


#while true
#do
#    echo "DONE!!!"
#done
